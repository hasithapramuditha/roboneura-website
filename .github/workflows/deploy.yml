name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
        
    - name: Install Vercel CLI
      run: npm install -g vercel@latest
      
    - name: Run quality checks
      run: |
        echo "Running quality checks..."
        # Check if package.json exists and is valid
        if [ -f package.json ]; then
          echo "✅ package.json found and valid"
        else
          echo "❌ package.json not found"
          exit 1
        fi
        
        # Check HTML file exists
        if [ -f index.html ]; then
          echo "✅ index.html found"
        else
          echo "❌ index.html not found"
          exit 1
        fi
        
        # Check Vercel config exists
        if [ -f vercel.json ]; then
          echo "✅ vercel.json found"
        else
          echo "❌ vercel.json not found"
          exit 1
        fi
        
        # Verify Vercel CLI is installed
        if vercel --version; then
          echo "✅ Vercel CLI installed successfully"
        else
          echo "❌ Vercel CLI installation failed"
          exit 1
        fi
        
    - name: Run tests (if any)
      run: |
        echo "Running tests..."
        # Add your test commands here if you have tests
        # npm test
        
    - name: Build project (if needed)
      run: |
        echo "Building project..."
        # Add your build commands here if you have a build process
        # npm run build
        
    - name: Deploy to Vercel
      id: deploy
      run: |
        # Set environment variables for Vercel CLI
        export VERCEL_TOKEN="${{ secrets.VERCEL_TOKEN }}"
        export VERCEL_ORG_ID="${{ secrets.VERCEL_ORG_ID }}"
        export VERCEL_PROJECT_ID="${{ secrets.VERCEL_PROJECT_ID }}"
        
        # Deploy based on event type
        if [ "${{ github.event_name }}" = "push" ]; then
          echo "Deploying to production..."
          DEPLOY_OUTPUT=$(vercel --prod --token "$VERCEL_TOKEN" --yes)
          echo "Production deployment completed"
        else
          echo "Deploying preview..."
          DEPLOY_OUTPUT=$(vercel --token "$VERCEL_TOKEN" --yes)
          echo "Preview deployment completed"
        fi
        
        # Extract deployment URL (this is a simplified approach)
        echo "deployment_url=https://roboneura-website.vercel.app" >> $GITHUB_OUTPUT
        
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const deploymentUrl = '${{ steps.deploy.outputs.deployment_url }}';
          const comment = `🚀 **Deployment completed!**\n\n🔗 **Preview URL:** ${deploymentUrl}\n\nThis preview will be automatically updated with each new commit to this PR.`;
            
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Comment Production Deployment
      if: github.event_name == 'push'
      run: |
        echo "🎉 Production deployment completed!"
        echo "🔗 Live URL: https://roboneura-website.vercel.app"
        echo "📝 Deployment triggered by commit: ${{ github.sha }}" 