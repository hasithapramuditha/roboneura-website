name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run quality checks
      run: |
        echo "Running quality checks..."
        # Add your linting commands here if you have them
        # npm run lint
        # Add your type checking if using TypeScript
        # npm run type-check
        
    - name: Run tests (if any)
      run: |
        echo "Running tests..."
        # Add your test commands here if you have tests
        # npm test
        
    - name: Build project (if needed)
      run: |
        echo "Building project..."
        # Add your build commands here if you have a build process
        # npm run build
        
    - name: Deploy to Vercel
      id: deploy
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: ${{ github.event_name == 'push' && '--prod' || '--debug' }}
        
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const deploymentUrl = '${{ steps.deploy.outputs.preview-url }}';
          const comment = deploymentUrl 
            ? `ðŸš€ **Deployment completed!**\n\nðŸ”— **Preview URL:** ${deploymentUrl}\n\nThis preview will be automatically updated with each new commit to this PR.`
            : 'ðŸš€ **Deployment completed!**\n\nPreview URL will be available shortly.';
            
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Comment Production Deployment
      if: github.event_name == 'push'
      uses: actions/github-script@v7
      with:
        script: |
          const deploymentUrl = '${{ steps.deploy.outputs.preview-url }}';
          const comment = `ðŸŽ‰ **Production deployment completed!**\n\nðŸ”— **Live URL:** ${deploymentUrl || 'https://roboneura-website.vercel.app'}\n\nDeployment triggered by commit: \`${{ github.sha }}\``;
            
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: comment
          }); 