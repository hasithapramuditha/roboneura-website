name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'preview'
        type: choice
        options:
        - preview
        - production
      message:
        description: 'Deployment message'
        required: false
        default: 'Manual deployment triggered'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  manual-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
        
    - name: Install Vercel CLI
      run: npm install -g vercel@latest
      
    - name: Run quality checks
      run: |
        echo "Running quality checks..."
        # Check if package.json exists and is valid
        if [ -f package.json ]; then
          echo "✅ package.json found and valid"
        else
          echo "❌ package.json not found"
          exit 1
        fi
        
        # Check HTML file exists
        if [ -f index.html ]; then
          echo "✅ index.html found"
        else
          echo "❌ index.html not found"
          exit 1
        fi
        
        # Check Vercel config exists
        if [ -f vercel.json ]; then
          echo "✅ vercel.json found"
        else
          echo "❌ vercel.json not found"
          exit 1
        fi
        
        # Verify Vercel CLI is installed
        if vercel --version; then
          echo "✅ Vercel CLI installed successfully"
        else
          echo "❌ Vercel CLI installation failed"
          exit 1
        fi
        
        # Run npm quality check if available
        if npm run quality-check; then
          echo "✅ Quality checks passed"
        else
          echo "⚠️ Quality checks failed or not configured"
        fi
      
    - name: Deploy to Vercel
      id: deploy
      run: |
        # Set environment variables for Vercel CLI
        export VERCEL_TOKEN="${{ secrets.VERCEL_TOKEN }}"
        export VERCEL_ORG_ID="${{ secrets.VERCEL_ORG_ID }}"
        export VERCEL_PROJECT_ID="${{ secrets.VERCEL_PROJECT_ID }}"
        
        # Deploy based on environment input
        if [ "${{ inputs.environment }}" = "production" ]; then
          echo "Deploying to production..."
          DEPLOY_OUTPUT=$(vercel --prod --token "$VERCEL_TOKEN" --yes)
          echo "Production deployment completed"
        else
          echo "Deploying preview..."
          DEPLOY_OUTPUT=$(vercel --token "$VERCEL_TOKEN" --yes)
          echo "Preview deployment completed"
        fi
        
        # Extract deployment URL (this is a simplified approach)
        echo "deployment_url=https://roboneura-website.vercel.app" >> $GITHUB_OUTPUT
        
    - name: Comment deployment status
      run: |
        echo "🚀 **${{ inputs.environment }} Deployment Completed!**"
        echo ""
        echo "📝 **Message:** ${{ inputs.message }}"
        echo "🔗 **URL:** https://roboneura-website.vercel.app"
        echo "👤 **Triggered by:** @${{ github.actor }}"
        echo "⏰ **Time:** $(date -u +"%Y-%m-%dT%H:%M:%SZ")" 